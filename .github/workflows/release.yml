on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - 'configure'
    - 'm4/version.m4'
    - '.github/workflows/release.yml'
  pull_request:
    branches:
    - main
    paths:
    - '.github/workflows/release.yml'

name: release
jobs:
  change_log:
    name: 'Create ChangeLog.md'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.create-changelog.outputs.version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: npm install -g auto-changelog

    - name: Create ChangeLog.md
      id: create-changelog
      run: |
        git checkout 0deac72ed480ac2ec8e9d766c15ddb3bca055952
        export NEXT_VERSION=$(grep -oP "PACKAGE_VERSION='\K[0-9\.-]*" configure)
        #git tag $NEXT_VERSION
        auto-changelog --sort-commits date
        mkdir artifacts
        mv ChangeLog.md artifacts/ChangeLog.md
        echo "version=$(echo $NEXT_VERSION | tr '-' '.')" >> "$GITHUB_OUTPUT"

    - name: Upload ChangeLog.md
      uses: actions/upload-artifact@v4
      with:
        name: ChangeLog
        path: artifacts

  release_windows_msix:
    name: 'Windows ${{matrix.quantum}}${{matrix.hdri_flag}}'
    needs:
      - change_log
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        quantum: [ Q16 ]
        hdri: [ HDRI ]
        exclude:
          - quantum: Q8
            hdri: HDRI
        include:
          - hdri: HDRI
            hdri_flag: '-HDRI'

    steps:
    - name: Clone ImageMagick
      uses: actions/checkout@v4
      with:
        path: ImageMagick

    - name: Clone ImageMagick-Windows
      uses: actions/checkout@v4
      with:
        repository: ImageMagick/ImageMagick-Windows
        path: ImageMagick-Windows
        ref: msix-installer

    - name: Clone repositories
      shell: cmd
      run: |
        cd ImageMagick
        for /f "tokens=* USEBACKQ" %%F IN (`git rev-parse HEAD`) do set COMMIT_SHA=%%F
        cd ..\ImageMagick-Windows
        CloneRepositories.cmd 0deac72ed480ac2ec8e9d766c15ddb3bca055952

    # - name: Download ChangeLog.md
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: ChangeLog
    #     path: ImageMagick-Windows\ImageMagick

    - name: Build configure
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd ImageMagick-Windows\VisualMagick\configure
        msbuild configure.2022.sln /m /t:Rebuild /p:Configuration=Release,Platform=x64

    - name: Configure ImageMagick (x64)
      shell: cmd
      run: |
        cd ImageMagick-Windows\VisualMagick\configure
        configure.exe /VS2022 /noWizard /noAliases /${{matrix.hdri}} /${{matrix.quantum}} /x64 /smtd

    - name: Build ImageMagick (x64)
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd ImageMagick-Windows\VisualMagick
        msbuild /m /t:Rebuild /p:Configuration=Release,Platform=x64

    - name: Copy files (x64)
      shell: cmd
      run: |
        cd ImageMagick-Windows\VisualMagick
        mkdir Msix\x64
        copy /Y bin\*.xml Msix\x64
        copy /Y bin\*.exe Msix\x64

    - name: Configure ImageMagick (arm64)
      shell: cmd
      run: |
        cd ImageMagick-Windows\VisualMagick\configure
        configure.exe /VS2022 /noWizard /noAliases /${{matrix.hdri}} /${{matrix.quantum}} /arm64 /smtd

    - name: Build ImageMagick (arm64)
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd ImageMagick-Windows\VisualMagick
        msbuild /m /t:Rebuild /p:Configuration=Release,Platform=arm64

    - name: Copy files (arm64)
      shell: cmd
      run: |
        cd ImageMagick-Windows\VisualMagick
        mkdir Msix\arm64
        copy /Y bin\*.xml Msix\arm64
        copy /Y bin\*.exe Msix\arm64

    - name: Create msix installer with Advanced Installer
      env:
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        advancedinstaller_url: https://www.advancedinstaller.com/downloads/advinst-azts.msi
      uses: caphyon/advinst-github-action@v1.0
      with:
        advinst-license: ${{ secrets.ADVINST_LICENSE_KEY }}
        advinst-enable-automation: 'true'
        aip-path: ImageMagick-Windows\VisualMagick\Msix\ImageMagick.${{matrix.quantum}}${{matrix.hdri_flag}}.aip
        aip-build-name: Build_MSIX
        aip-commands: |
            SetVersion ${{needs.change_log.outputs.version}}

    - uses: actions/upload-artifact@v4
      with:
        name: ImageMagick.${{matrix.quantum}}${{matrix.hdri_flag}}.msixbundle
        path: 'ImageMagick-Windows\VisualMagick\Msix\Output\ImageMagick.${{matrix.quantum}}${{matrix.hdri_flag}}.msixbundle'

  # release_windows_installer:
  #   name: 'Windows ${{matrix.quantum}}${{matrix.hdri_flag}}-${{matrix.platform}} (${{matrix.type}})'
  #   needs:
  #     - change_log
  #   runs-on: windows-latest

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform: [ x64, arm64, x86 ]
  #       type: [ dll, static ]
  #       quantum: [ Q8, Q16 ]
  #       hdri: [ HDRI, noHDRI ]
  #       exclude:
  #         - quantum: Q8
  #           hdri: HDRI
  #       include:
  #         - platform: x64
  #           bit: 64
  #         - platform: arm64
  #           bit: 64
  #         - platform: x86
  #           bit: 32
  #         - type: dll
  #           type_flag: dmt
  #         - type: static
  #           type_flag: smtd
  #         - hdri: HDRI
  #           hdri_flag: '-HDRI'

  #   steps:
  #   - name: Clone ImageMagick
  #     uses: actions/checkout@v4
  #     with:
  #       path: ImageMagick

  #   - name: Clone ImageMagick-Windows
  #     uses: actions/checkout@v4
  #     with:
  #       repository: ImageMagick/ImageMagick-Windows
  #       path: ImageMagick-Windows
  #       ref: refs/heads/main

  #   - name: Clone repositories
  #     shell: cmd
  #     run: |
  #       cd ImageMagick
  #       for /f "tokens=* USEBACKQ" %%F IN (`git rev-parse HEAD`) do set COMMIT_SHA=%%F
  #       cd ..\ImageMagick-Windows
  #       CloneRepositories.cmd %COMMIT_SHA% source

  #   - name: Download hp2xx
  #     shell: cmd
  #     run: |
  #       powershell Invoke-WebRequest -Uri https://github.com/ImageMagick/ImageMagick-Windows/releases/download/20200615/hp2xx.exe -OutFile hp2xx.exe
  #       copy /Y hp2xx.exe ImageMagick-Windows\VisualMagick\bin

  #   - name: Install Strawberry Perl
  #     if: ${{matrix.type == 'dll' && matrix.platform != 'arm64'}}
  #     shell: cmd
  #     run: |
  #       powershell Invoke-WebRequest -Uri https://github.com/ImageMagick/ImageMagick-Windows/releases/download/20200615/strawberry-perl-5.30.2.1-${{matrix.bit}}bit.msi -OutFile strawberry-perl-5.30.2.1-${{matrix.bit}}bit.msi
  #       msiexec /i strawberry-perl-5.30.2.1-${{matrix.bit}}bit.msi /qn INSTALLDIR="C:\Strawberry${{matrix.bit}}"
  #       mv "C:\Strawberry" "C:\Strawberry64"

  #   - name: Install Inno Setup
  #     shell: cmd
  #     run: |
  #       powershell Invoke-WebRequest -Uri https://github.com/ImageMagick/ImageMagick-Windows/releases/download/20200615/innosetup-6.2.0.exe -OutFile innosetup-6.2.0.exe
  #       innosetup-6.2.0.exe /SILENT /SUPPRESSMSGBOXES /NORESTART /SP-

  #   - name: Build configure
  #     shell: cmd
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
  #       cd ImageMagick-Windows\VisualMagick\configure
  #       msbuild configure.2022.sln /m /t:Rebuild /p:Configuration=Release,Platform=x64

  #   - name: Configure ImageMagick
  #     shell: cmd
  #     run: |
  #       cd ImageMagick-Windows\VisualMagick\configure
  #       configure.exe /noWizard /VS2022 /includeOptional /installedSupport /deprecated /${{matrix.hdri}} /${{matrix.quantum}} /${{matrix.platform}} /${{matrix.type_flag}}

  #   steps:
  #   - name: Clone ImageMagick
  #     uses: actions/checkout@v4
  #     with:
  #       path: ImageMagick

  #   - name: Clone ImageMagick-Windows
  #     uses: actions/checkout@v4
  #     with:
  #       repository: ImageMagick/ImageMagick-Windows
  #       path: ImageMagick-Windows

  #   - name: Clone repositories
  #     shell: cmd
  #     run: |
  #       cd ImageMagick
  #       for /f "tokens=* USEBACKQ" %%F IN (`git rev-parse HEAD`) do set COMMIT_SHA=%%F
  #       cd ..\ImageMagick-Windows
  #       CloneRepositories.cmd %COMMIT_SHA%

  #   - name: Sign binaries
  #     if: github.event_name != 'pull_request'
  #     uses: azure/azure-code-signing-action@v0.3.0
  #     with:
  #       azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
  #       endpoint: https://eus.codesigning.azure.net/
  #       code-signing-account-name: ImageMagick
  #       certificate-profile-name: ImageMagick
  #       files-folder: 'ImageMagick-Windows\VisualMagick\bin'
  #       files-folder-filter: dll,exe
  #       file-digest: SHA256
  #       timestamp-rfc3161: http://timestamp.acs.microsoft.com
  #       timestamp-digest: SHA256
  #       append-signature: true
  #       timeout: 600

  #   - name: Create installer
  #     shell: cmd
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
  #       "C:\Program Files (x86)\Inno Setup 6\iscc.exe" ImageMagick-Windows\VisualMagick\installer\im-${{matrix.platform}}${{matrix.hdri_flag}}-${{matrix.type}}-${{matrix.quantum}}.iss

  #   - name: Sign installer
  #     if: github.event_name != 'pull_request'
  #     uses: azure/azure-code-signing-action@v0.3.0
  #     with:
  #       azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
  #       endpoint: https://eus.codesigning.azure.net/
  #       code-signing-account-name: ImageMagick
  #       certificate-profile-name: ImageMagick
  #       files-folder: 'ImageMagick-Windows\VisualMagick\installer\output'
  #       files-folder-filter: dll,exe
  #       file-digest: SHA256
  #       timestamp-rfc3161: http://timestamp.acs.microsoft.com
  #       timestamp-digest: SHA256
  #       append-signature: true
  #       timeout: 600

  #   - name: Get version
  #     id: version
  #     shell: pwsh
  #     run: |
  #       $version = (cat "ImageMagick-Windows\VisualMagick\installer\inc\version.isx" | Select-String "MagickPackageFullVersionText") | Out-String
  #       $version = ($version | Select-String '".*"' -AllMatches |  Select -Expand Matches | Select -Expand Value | Out-String)
  #       $version = $version -Replace "`n|`r|""",""
  #       $version = $version -Replace " ","-"
  #       echo "version=$version" >> $env:GITHUB_OUTPUT

  #   - uses: actions/upload-artifact@v4
  #     with:
  #       name: 'ImageMagick-${{steps.version.outputs.version}}-installer-${{matrix.quantum}}${{matrix.hdri_flag}}-${{matrix.type}}-${{matrix.platform}}'
  #       path: 'ImageMagick-Windows\VisualMagick\installer\output'

  # release_windows_source:
  #   name: 'Windows source'
  #   needs:
  #     - change_log
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       repository: ImageMagick/ImageMagick-Windows
  #       path: ImageMagick-Windows
  #       ref: refs/heads/main

  #   - name: Clone repositories
  #     shell: cmd
  #     run: |
  #       cd ImageMagick-Windows
  #       CloneRepositories.cmd https://github.com/ImageMagick source

  #   - name: Download ChangeLog.md
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: ChangeLog
  #       path: ImageMagick-Windows\ImageMagick

  #   - name: Create source archive
  #     shell: cmd
  #     run: |
  #       cd ImageMagick-Windows
  #       7z a ImageMagick-Windows.7z .\source\*

  #   - uses: actions/upload-artifact@v4
  #     with:
  #       name: ImageMagick-Windows
  #       path: 'ImageMagick-Windows\ImageMagick-Windows.7z'

  # release_windows_portable:
  #   name: 'Windows portable ${{matrix.quantum}}${{matrix.hdri_flag}}-${{matrix.platform}}'
  #   needs:
  #     - change_log
  #   runs-on: windows-latest

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform: [ x64, arm64, x86 ]
  #       quantum: [ Q8, Q16 ]
  #       hdri: [ HDRI, noHDRI ]
  #       exclude:
  #         - quantum: Q8
  #           hdri: HDRI
  #       include:
  #         - platform: x64
  #           bit: 64
  #         - platform: arm64
  #           bit: 64
  #         - platform: x86
  #           bit: 32
  #         - hdri: HDRI
  #           hdri_flag: '-HDRI'

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       repository: ImageMagick/ImageMagick-Windows
  #       path: ImageMagick-Windows
  #       ref: refs/heads/main

  #   - name: Clone repositories
  #     shell: cmd
  #     run: |
  #       cd ImageMagick-Windows
  #       CloneRepositories.cmd https://github.com/ImageMagick shallow

  #   - name: Download ChangeLog.md
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: ChangeLog
  #       path: ImageMagick-Windows\ImageMagick

  #   - name: Build configure
  #     shell: cmd
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
  #       cd ImageMagick-Windows\VisualMagick\configure
  #       msbuild configure.2022.sln /m /t:Rebuild /p:Configuration=Release,Platform=x64

  #   - name: Configure ImageMagick
  #     shell: cmd
  #     run: |
  #       cd ImageMagick-Windows\VisualMagick\configure
  #       configure.exe /noWizard /VS2022 /${{matrix.hdri}} /${{matrix.quantum}} /${{matrix.platform}} /smt

  #   - name: Build ImageMagick
  #     shell: cmd
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
  #       cd ImageMagick-Windows\VisualMagick
  #       set /p solution=<solution
  #       msbuild %solution% /m /t:Rebuild /p:Configuration=Release,Platform=${{matrix.platform}}

  #   - name: Sign executables
  #     if: github.event_name != 'pull_request'
  #     uses: azure/azure-code-signing-action@v0.3.0
  #     with:
  #       azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
  #       endpoint: https://eus.codesigning.azure.net/
  #       code-signing-account-name: ImageMagick
  #       certificate-profile-name: ImageMagick
  #       files-folder: 'ImageMagick-Windows\VisualMagick\bin'
  #       files-folder-filter: exe
  #       file-digest: SHA256
  #       timestamp-rfc3161: http://timestamp.acs.microsoft.com
  #       timestamp-digest: SHA256
  #       append-signature: true
  #       timeout: 600

  #   - name: Copy Files
  #     id: package
  #     shell: pwsh
  #     run: |
  #       [void](New-Item -Name "portable" -ItemType directory)
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\*.exe" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\config\colors.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\config\english.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\config\locale.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\config\log.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\config\mime.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\config\quantization-table.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\configure.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\ImageMagick.rdf" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\delegates.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\policy.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\sRGB.icc" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\thresholds.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\type-ghostscript.xml" "portable"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\bin\type.xml" "portable"

  #       Copy-Item "ImageMagick-Windows\ImageMagick\ChangeLog.md" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\LICENSE" "portable\LICENSE.txt"
  #       Copy-Item "ImageMagick-Windows\VisualMagick\NOTICE.txt" "portable"
  #       Copy-Item "ImageMagick-Windows\ImageMagick\README.txt" "portable"

  #       $version = (cat "ImageMagick-Windows\VisualMagick\installer\inc\version.isx" | Select-String "MagickPackageFullVersionText") | Out-String
  #       $version = ($version | Select-String '".*"' -AllMatches |  Select -Expand Matches | Select -Expand Value | Out-String)
  #       $version = $version -Replace "`n|`r|""",""
  #       $version = $version -Replace " ","-"
  #       echo "version=$version" >> $env:GITHUB_OUTPUT

  #   - uses: actions/upload-artifact@v4
  #     with:
  #       name: 'ImageMagick-${{steps.package.outputs.version}}-portable-${{matrix.quantum}}${{matrix.hdri_flag}}-${{matrix.platform}}'
  #       path: portable
